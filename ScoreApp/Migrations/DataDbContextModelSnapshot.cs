// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ScoreApp.Database;
using System;

namespace ScoreApp.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("ScoreApp.Database.Game", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("Ended");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<DateTime>("Started");

                    b.HasKey("ID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ScoreApp.Database.Round", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<long>("GameID");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("ScoreApp.Database.Team", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<long?>("GameID");

                    b.Property<int>("GamesPlayed");

                    b.Property<int>("GamesWon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ScoreApp.Database.TeamRound", b =>
                {
                    b.Property<long>("RoundId");

                    b.Property<long>("TeamId");

                    b.HasKey("RoundId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamRound");
                });

            modelBuilder.Entity("ScoreApp.Database.Round", b =>
                {
                    b.HasOne("ScoreApp.Database.Game", "Game")
                        .WithMany("PlayingRounds")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScoreApp.Database.Team", b =>
                {
                    b.HasOne("ScoreApp.Database.Game")
                        .WithMany("Teams")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("ScoreApp.Database.TeamRound", b =>
                {
                    b.HasOne("ScoreApp.Database.Round", "Round")
                        .WithMany("Teams")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ScoreApp.Database.Team", "Team")
                        .WithMany("Rounds")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
